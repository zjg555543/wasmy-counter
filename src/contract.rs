#[cfg(not(feature = "library"))]
use cosmwasm_std::entry_point;
use cosmwasm_std::{
    to_binary, Binary, Deps, DepsMut, Env, MessageInfo, Response, StdResult, Uint256,BankMsg
};

use crate::error::ContractError;
use crate::msg::{ExecuteMsg, InstantiateMsg, QueryMsg, SudoMsg};

#[cfg_attr(not(feature = "library"), entry_point)]
pub fn instantiate(
    _: DepsMut,
    _env: Env,
    _info: MessageInfo,
    _msg: InstantiateMsg,
) -> Result<Response, ContractError> {
    Ok(Response::new())
}


#[entry_point]
pub fn sudo(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}

#[entry_point] 
 pub fn sudo1(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo10(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo11(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo12(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo13(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo14(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo15(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo16(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo17(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo18(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo19(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo20(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo21(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo22(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo23(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo24(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo25(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo26(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo27(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo28(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo29(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo30(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo31(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo32(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo33(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo34(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo35(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo36(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo37(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo38(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo39(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo40(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo41(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo42(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo43(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo44(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo45(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo46(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo47(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo48(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo49(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo50(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo51(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo52(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo53(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo54(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo55(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo56(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo57(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo58(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo59(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo60(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo61(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo62(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo63(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo64(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo65(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo66(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo67(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo68(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo69(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo70(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo71(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo72(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo73(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo74(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo75(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo76(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo77(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo78(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo79(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo80(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo81(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo82(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo83(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo84(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo85(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo86(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo87(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo88(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo89(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo90(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo91(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo92(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo93(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo94(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo95(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo96(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo97(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo98(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo99(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo100(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}

#[entry_point] 
 pub fn sudo101(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo102(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo103(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo104(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo105(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo106(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo107(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo108(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo109(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo110(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo111(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo112(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo113(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo114(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo115(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo116(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo117(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo118(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo119(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo120(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo121(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo122(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo123(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo124(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo125(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo126(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo127(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo128(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo129(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo130(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo131(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo132(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo133(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo134(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo135(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo136(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo137(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo138(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo139(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo140(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo141(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo142(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo143(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo144(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo145(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo146(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo147(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo148(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo149(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo150(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo151(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo152(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo153(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo154(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo155(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo156(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo157(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo158(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo159(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo160(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo161(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo162(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo163(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo164(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo165(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo166(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo167(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo168(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo169(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo170(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo171(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo172(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo173(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo174(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo175(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo176(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo177(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo178(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo179(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo180(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo181(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo182(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo183(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo184(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo185(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo186(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo187(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo188(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo189(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo190(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo191(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo192(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo193(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo194(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo195(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo196(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo197(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo198(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo199(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo200(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo201(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo202(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo203(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo204(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo205(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo206(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo207(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo208(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo209(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo210(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo211(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo212(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo213(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo214(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo215(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo216(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo217(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo218(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo219(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo220(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo221(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo222(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo223(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo224(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo225(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo226(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo227(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo228(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo229(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo230(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo231(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo232(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo233(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo234(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo235(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo236(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo237(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo238(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo239(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo240(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo241(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo242(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo243(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo244(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo245(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo246(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo247(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo248(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo249(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo250(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo251(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo252(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo253(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo254(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo255(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo256(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo257(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo258(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo259(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo260(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo261(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo262(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo263(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo264(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo265(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo266(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo267(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo268(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo269(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo270(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo271(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo272(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo273(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo274(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo275(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo276(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo277(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo278(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo279(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo280(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo281(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo282(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo283(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo284(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo285(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo286(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo287(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo288(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo289(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo290(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo291(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo292(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo293(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo294(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo295(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo296(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo297(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo298(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo299(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo300(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo301(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo302(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo303(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo304(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo305(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo306(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo307(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo308(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo309(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo310(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo311(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo312(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo313(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo314(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo315(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo316(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo317(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo318(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo319(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo320(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo321(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo322(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo323(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo324(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo325(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo326(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo327(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo328(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo329(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo330(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo331(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo332(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo333(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo334(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo335(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo336(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo337(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo338(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo339(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo340(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo341(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo342(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo343(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo344(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo345(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo346(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo347(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo348(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo349(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo350(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo351(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo352(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo353(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo354(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo355(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo356(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo357(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo358(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo359(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo360(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo361(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo362(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo363(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo364(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo365(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo366(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo367(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo368(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo369(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo370(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo371(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo372(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo373(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo374(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo375(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo376(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo377(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo378(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo379(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo380(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo381(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo382(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo383(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo384(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo385(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo386(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo387(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo388(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo389(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo390(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo391(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo392(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo393(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo394(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo395(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo396(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo397(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo398(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo399(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo400(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo401(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo402(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo403(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo404(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo405(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo406(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo407(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo408(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo409(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo410(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo411(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo412(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo413(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo414(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo415(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo416(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo417(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo418(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo419(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo420(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo421(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo422(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo423(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo424(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo425(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo426(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo427(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo428(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo429(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo430(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo431(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo432(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo433(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo434(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo435(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo436(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo437(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo438(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo439(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo440(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo441(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo442(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo443(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo444(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo445(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo446(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo447(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo448(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo449(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo450(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo451(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo452(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo453(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo454(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo455(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo456(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo457(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo458(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo459(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo460(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo461(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo462(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo463(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo464(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo465(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo466(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo467(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo468(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo469(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo470(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo471(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo472(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo473(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo474(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo475(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo476(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo477(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo478(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo479(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo480(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo481(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo482(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo483(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo484(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo485(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo486(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo487(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo488(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo489(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo490(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo491(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo492(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo493(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo494(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo495(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo496(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo497(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo498(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo499(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo500(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo501(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo502(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo503(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo504(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo505(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo506(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo507(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo508(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo509(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo510(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo511(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo512(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo513(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo514(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo515(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo516(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo517(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo518(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo519(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo520(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo521(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo522(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo523(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo524(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo525(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo526(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo527(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo528(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo529(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo530(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo531(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo532(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo533(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo534(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo535(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo536(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo537(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo538(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo539(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo540(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo541(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo542(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo543(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo544(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo545(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo546(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo547(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo548(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo549(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo550(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo551(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo552(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo553(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo554(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo555(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo556(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo557(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo558(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo559(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo560(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo561(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo562(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo563(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo564(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo565(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo566(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo567(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo568(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo569(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo570(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo571(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo572(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo573(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo574(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo575(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo576(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo577(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo578(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo579(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo580(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo581(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo582(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo583(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo584(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo585(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo586(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo587(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo588(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo589(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo590(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo591(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo592(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo593(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo594(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo595(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo596(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo597(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo598(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo599(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo600(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo601(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo602(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo603(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo604(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo605(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo606(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo607(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo608(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo609(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo610(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo611(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo612(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo613(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo614(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo615(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo616(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo617(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo618(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo619(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo620(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo621(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo622(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo623(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo624(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo625(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo626(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo627(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo628(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo629(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo630(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo631(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo632(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo633(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo634(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo635(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo636(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo637(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo638(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo639(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo640(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo641(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo642(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo643(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo644(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo645(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo646(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo647(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo648(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo649(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo650(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo651(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo652(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo653(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo654(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo655(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo656(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo657(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo658(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo659(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo660(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo661(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo662(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo663(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo664(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo665(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo666(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo667(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo668(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo669(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo670(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo671(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo672(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo673(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo674(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo675(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo676(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo677(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo678(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo679(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo680(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo681(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo682(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo683(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo684(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo685(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo686(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo687(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo688(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo689(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo690(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo691(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo692(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo693(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo694(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo695(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo696(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo697(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo698(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo699(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo700(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo701(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo702(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo703(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo704(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo705(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo706(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo707(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo708(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo709(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo710(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo711(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo712(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo713(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo714(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo715(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo716(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo717(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo718(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo719(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo720(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo721(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo722(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo723(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo724(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo725(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo726(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo727(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo728(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo729(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo730(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo731(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo732(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo733(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo734(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo735(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo736(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo737(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo738(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo739(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo740(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo741(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo742(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo743(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo744(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo745(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo746(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo747(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo748(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo749(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo750(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo751(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo752(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo753(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo754(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo755(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo756(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo757(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo758(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo759(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo760(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo761(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo762(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo763(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo764(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo765(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo766(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo767(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo768(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo769(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo770(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo771(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo772(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo773(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo774(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo775(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo776(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo777(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo778(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo779(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo780(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo781(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo782(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo783(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo784(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo785(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo786(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo787(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo788(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo789(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo790(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo791(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo792(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo793(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo794(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo795(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo796(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo797(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo798(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo799(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo800(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo801(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo802(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo803(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo804(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo805(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo806(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo807(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo808(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo809(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo810(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo811(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo812(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo813(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo814(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo815(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo816(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo817(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo818(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo819(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo820(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo821(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo822(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo823(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo824(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo825(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo826(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo827(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo828(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo829(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo830(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo831(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo832(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo833(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo834(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo835(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo836(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo837(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo838(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo839(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo840(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo841(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo842(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo843(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo844(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo845(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo846(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo847(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo848(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo849(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo850(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo851(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo852(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo853(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo854(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo855(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo856(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo857(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo858(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo859(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo860(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo861(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo862(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo863(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo864(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo865(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo866(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo867(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo868(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo869(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo870(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo871(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo872(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo873(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo874(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo875(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo876(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo877(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo878(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo879(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo880(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo881(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo882(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo883(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo884(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo885(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo886(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo887(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo888(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo889(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo890(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo891(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo892(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo893(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo894(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo895(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo896(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo897(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo898(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo899(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo900(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo901(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo902(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo903(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo904(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo905(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo906(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo907(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo908(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo909(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo910(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo911(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo912(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo913(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo914(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo915(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo916(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo917(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo918(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo919(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo920(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo921(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo922(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo923(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo924(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo925(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo926(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo927(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo928(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo929(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo930(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo931(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo932(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo933(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo934(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo935(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo936(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo937(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo938(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo939(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo940(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo941(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo942(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo943(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo944(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo945(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo946(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo947(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo948(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo949(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo950(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo951(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo952(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo953(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo954(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo955(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo956(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo957(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo958(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo959(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo960(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo961(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo962(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo963(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo964(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo965(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo966(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo967(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo968(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo969(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo970(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo971(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo972(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo973(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo974(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo975(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo976(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo977(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo978(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo979(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo980(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo981(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo982(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo983(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo984(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo985(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo986(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo987(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo988(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo989(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo990(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo991(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo992(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo993(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo994(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo995(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo996(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo997(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo998(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo999(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}

#[entry_point] 
 pub fn sudo1001(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1002(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1003(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1004(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1005(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1006(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1007(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1008(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1009(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1010(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1011(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1012(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1013(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1014(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1015(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1016(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1017(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1018(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1019(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1020(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1021(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1022(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1023(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1024(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1025(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1026(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1027(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1028(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1029(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1030(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1031(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1032(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1033(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1034(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1035(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1036(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1037(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1038(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1039(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1040(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1041(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1042(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1043(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1044(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1045(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1046(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1047(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1048(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1049(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1050(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1051(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1052(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1053(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1054(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1055(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1056(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1057(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1058(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1059(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1060(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1061(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1062(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1063(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1064(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1065(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1066(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1067(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1068(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1069(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1070(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1071(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1072(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1073(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1074(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1075(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1076(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1077(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1078(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1079(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1080(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1081(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1082(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1083(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1084(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1085(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1086(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1087(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1088(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1089(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1090(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1091(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1092(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1093(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1094(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1095(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1096(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1097(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1098(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1099(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1100(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1101(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1102(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1103(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1104(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1105(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1106(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1107(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1108(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1109(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1110(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1111(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1112(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1113(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1114(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1115(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1116(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1117(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1118(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1119(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1120(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1121(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1122(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1123(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1124(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1125(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1126(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1127(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1128(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1129(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1130(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1131(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1132(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1133(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1134(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1135(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1136(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1137(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1138(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1139(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1140(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1141(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1142(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1143(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1144(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1145(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1146(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1147(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1148(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1149(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1150(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1151(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1152(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1153(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1154(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1155(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1156(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1157(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1158(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1159(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1160(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1161(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1162(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1163(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1164(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1165(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1166(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1167(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1168(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1169(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1170(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1171(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1172(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1173(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1174(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1175(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1176(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1177(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1178(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1179(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1180(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1181(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1182(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1183(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1184(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1185(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1186(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1187(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1188(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1189(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1190(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1191(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1192(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1193(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1194(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1195(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1196(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1197(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1198(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1199(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1200(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1201(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1202(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1203(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1204(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1205(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1206(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1207(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1208(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1209(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1210(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1211(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1212(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1213(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1214(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1215(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1216(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1217(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1218(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1219(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1220(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1221(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1222(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1223(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1224(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1225(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1226(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1227(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1228(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1229(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1230(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1231(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1232(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1233(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1234(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1235(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1236(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1237(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1238(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1239(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1240(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1241(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1242(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1243(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1244(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1245(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1246(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1247(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1248(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1249(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1250(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1251(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1252(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1253(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1254(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1255(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1256(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1257(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1258(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1259(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1260(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1261(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1262(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1263(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1264(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1265(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1266(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1267(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1268(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1269(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1270(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1271(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1272(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1273(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1274(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1275(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1276(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1277(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1278(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1279(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1280(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1281(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1282(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1283(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1284(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1285(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1286(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1287(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1288(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1289(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1290(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1291(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1292(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1293(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1294(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1295(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1296(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1297(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1298(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1299(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1300(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1301(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1302(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1303(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1304(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1305(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1306(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1307(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1308(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1309(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1310(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1311(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1312(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1313(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1314(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1315(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1316(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1317(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1318(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1319(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1320(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1321(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1322(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1323(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1324(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1325(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1326(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1327(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1328(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1329(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1330(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1331(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1332(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1333(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1334(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1335(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1336(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1337(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1338(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1339(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1340(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1341(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1342(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1343(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1344(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1345(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1346(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1347(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1348(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1349(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1350(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1351(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1352(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1353(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1354(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1355(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1356(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1357(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1358(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1359(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1360(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1361(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1362(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1363(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1364(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1365(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1366(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1367(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1368(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1369(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1370(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1371(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1372(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1373(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1374(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1375(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1376(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1377(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1378(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1379(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1380(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1381(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1382(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1383(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1384(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1385(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1386(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1387(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1388(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1389(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1390(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1391(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1392(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1393(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1394(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1395(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1396(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1397(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1398(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1399(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1400(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1401(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1402(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1403(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1404(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1405(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1406(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1407(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1408(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1409(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1410(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1411(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1412(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1413(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1414(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1415(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1416(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1417(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1418(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1419(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1420(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1421(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1422(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1423(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1424(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1425(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1426(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1427(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1428(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1429(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1430(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1431(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1432(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1433(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1434(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1435(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1436(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1437(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1438(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1439(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1440(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1441(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1442(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1443(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1444(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1445(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1446(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1447(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1448(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1449(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1450(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1451(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1452(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1453(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1454(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1455(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1456(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1457(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1458(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1459(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1460(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1461(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1462(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1463(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1464(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1465(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1466(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1467(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1468(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1469(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1470(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1471(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1472(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1473(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1474(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1475(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1476(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1477(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1478(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1479(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1480(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1481(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1482(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1483(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1484(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1485(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1486(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1487(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1488(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1489(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1490(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1491(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1492(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1493(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1494(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1495(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1496(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1497(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1498(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1499(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1500(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1501(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1502(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1503(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1504(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1505(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1506(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1507(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1508(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1509(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1510(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1511(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1512(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1513(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1514(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1515(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1516(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1517(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1518(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1519(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1520(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1521(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1522(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1523(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1524(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1525(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1526(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1527(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1528(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1529(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1530(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1531(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1532(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1533(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1534(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1535(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1536(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1537(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1538(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1539(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1540(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1541(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1542(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1543(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1544(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1545(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1546(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1547(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1548(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1549(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1550(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1551(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1552(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1553(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1554(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1555(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1556(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1557(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1558(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1559(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1560(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1561(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1562(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1563(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1564(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1565(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1566(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1567(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1568(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1569(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1570(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1571(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1572(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1573(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1574(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1575(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1576(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1577(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1578(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1579(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1580(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1581(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1582(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1583(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1584(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1585(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1586(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1587(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1588(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1589(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1590(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1591(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1592(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1593(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1594(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1595(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1596(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1597(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1598(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1599(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1600(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1601(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1602(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1603(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1604(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1605(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1606(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1607(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1608(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1609(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1610(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1611(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1612(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1613(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1614(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1615(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1616(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1617(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1618(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1619(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1620(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1621(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1622(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1623(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1624(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1625(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1626(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1627(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1628(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1629(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1630(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1631(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1632(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1633(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1634(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1635(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1636(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1637(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1638(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1639(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1640(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1641(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1642(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1643(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1644(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1645(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1646(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1647(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1648(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1649(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1650(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1651(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1652(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1653(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1654(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1655(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1656(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1657(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1658(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1659(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1660(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1661(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1662(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1663(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1664(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1665(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1666(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1667(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1668(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1669(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1670(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1671(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1672(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1673(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1674(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1675(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1676(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1677(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1678(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1679(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1680(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1681(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1682(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1683(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1684(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1685(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1686(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1687(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1688(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1689(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1690(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1691(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1692(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1693(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1694(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1695(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1696(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1697(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1698(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1699(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1700(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1701(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1702(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1703(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1704(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1705(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1706(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1707(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1708(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1709(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1710(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1711(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1712(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1713(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1714(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1715(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1716(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1717(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1718(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1719(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1720(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1721(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1722(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1723(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1724(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1725(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1726(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1727(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1728(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1729(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1730(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1731(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1732(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1733(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1734(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1735(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1736(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1737(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1738(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1739(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1740(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1741(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1742(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1743(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1744(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1745(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1746(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1747(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1748(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1749(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1750(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1751(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1752(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1753(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1754(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1755(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1756(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1757(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1758(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1759(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1760(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1761(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1762(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1763(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1764(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1765(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1766(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1767(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1768(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1769(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1770(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1771(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1772(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1773(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1774(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1775(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1776(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1777(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1778(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1779(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1780(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1781(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1782(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1783(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1784(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1785(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1786(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1787(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1788(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1789(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1790(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1791(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1792(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1793(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1794(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1795(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1796(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1797(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1798(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1799(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1800(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1801(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1802(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1803(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1804(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1805(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1806(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1807(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1808(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1809(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1810(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1811(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1812(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1813(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1814(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1815(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1816(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1817(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1818(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1819(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1820(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1821(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1822(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1823(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1824(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1825(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1826(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1827(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1828(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1829(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1830(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1831(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1832(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1833(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1834(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1835(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1836(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1837(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1838(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1839(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1840(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1841(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1842(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1843(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1844(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1845(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1846(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1847(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1848(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1849(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1850(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1851(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1852(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1853(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1854(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1855(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1856(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1857(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1858(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1859(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1860(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1861(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1862(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1863(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1864(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1865(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1866(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1867(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1868(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1869(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1870(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1871(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1872(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1873(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1874(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1875(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1876(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1877(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1878(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1879(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1880(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1881(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1882(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1883(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1884(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1885(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1886(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1887(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1888(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1889(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1890(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1891(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1892(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1893(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1894(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1895(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1896(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1897(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1898(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1899(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1900(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1901(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1902(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1903(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1904(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1905(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1906(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1907(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1908(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1909(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1910(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1911(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1912(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1913(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1914(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1915(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1916(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1917(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1918(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1919(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1920(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1921(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1922(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1923(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1924(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1925(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1926(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1927(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1928(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1929(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1930(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1931(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1932(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1933(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1934(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1935(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1936(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1937(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1938(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1939(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1940(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1941(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1942(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1943(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1944(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1945(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1946(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1947(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1948(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1949(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1950(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1951(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1952(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1953(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1954(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1955(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1956(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1957(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1958(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1959(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1960(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1961(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1962(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1963(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1964(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1965(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1966(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1967(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1968(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1969(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1970(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1971(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1972(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1973(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1974(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1975(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1976(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1977(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1978(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1979(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1980(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1981(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1982(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1983(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1984(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1985(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1986(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1987(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1988(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1989(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1990(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1991(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1992(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1993(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1994(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1995(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1996(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1997(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1998(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo1999(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2000(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2001(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2002(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2003(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2004(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2005(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2006(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2007(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2008(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2009(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2010(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2011(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2012(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2013(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2014(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2015(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2016(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2017(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2018(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2019(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2020(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2021(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2022(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2023(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2024(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2025(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2026(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2027(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2028(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2029(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2030(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2031(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2032(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2033(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2034(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2035(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2036(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2037(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2038(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2039(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2040(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2041(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2042(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2043(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2044(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2045(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2046(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2047(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2048(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2049(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2050(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2051(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2052(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2053(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2054(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2055(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2056(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2057(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2058(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2059(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2060(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2061(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2062(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2063(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2064(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2065(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2066(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2067(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2068(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2069(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2070(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2071(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2072(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2073(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2074(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2075(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2076(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2077(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2078(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2079(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2080(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2081(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2082(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2083(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2084(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2085(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2086(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2087(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2088(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2089(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2090(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2091(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2092(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2093(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2094(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2095(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2096(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2097(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2098(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2099(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2100(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2101(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2102(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2103(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2104(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2105(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2106(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2107(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2108(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2109(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2110(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2111(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2112(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2113(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2114(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2115(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2116(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2117(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2118(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2119(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2120(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2121(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2122(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2123(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2124(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2125(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2126(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2127(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2128(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2129(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2130(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2131(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2132(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2133(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2134(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2135(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2136(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2137(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2138(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2139(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2140(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2141(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2142(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2143(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2144(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2145(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2146(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2147(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2148(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2149(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2150(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2151(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2152(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2153(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2154(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2155(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2156(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2157(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2158(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2159(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2160(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2161(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2162(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2163(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2164(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2165(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2166(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2167(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2168(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2169(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2170(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2171(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2172(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2173(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2174(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2175(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2176(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2177(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2178(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2179(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2180(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2181(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2182(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2183(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2184(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2185(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2186(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2187(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2188(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2189(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2190(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2191(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2192(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2193(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2194(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2195(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2196(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2197(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2198(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2199(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2200(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2201(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2202(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2203(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2204(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2205(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2206(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2207(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2208(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2209(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2210(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2211(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2212(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2213(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2214(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2215(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2216(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2217(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2218(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2219(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2220(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2221(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2222(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2223(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2224(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2225(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2226(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2227(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2228(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2229(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2230(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2231(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2232(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2233(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2234(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2235(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2236(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2237(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2238(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2239(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2240(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2241(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2242(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2243(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2244(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2245(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2246(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2247(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2248(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2249(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2250(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2251(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2252(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2253(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2254(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2255(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2256(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2257(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2258(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2259(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2260(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2261(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2262(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2263(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2264(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2265(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2266(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2267(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2268(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2269(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2270(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2271(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2272(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2273(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2274(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2275(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2276(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2277(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2278(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2279(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2280(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2281(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2282(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2283(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2284(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2285(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2286(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2287(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2288(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2289(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2290(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2291(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2292(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2293(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2294(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2295(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2296(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2297(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2298(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2299(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2300(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2301(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2302(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2303(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2304(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2305(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2306(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2307(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2308(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2309(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2310(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2311(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2312(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2313(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2314(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2315(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2316(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2317(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2318(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2319(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2320(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2321(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2322(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2323(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2324(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2325(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2326(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2327(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2328(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2329(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2330(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2331(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2332(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2333(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2334(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2335(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2336(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2337(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2338(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2339(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2340(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2341(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2342(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2343(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2344(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2345(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2346(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2347(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2348(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2349(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2350(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2351(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2352(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2353(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2354(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2355(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2356(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2357(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2358(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2359(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2360(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2361(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2362(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2363(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2364(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2365(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2366(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2367(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2368(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2369(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2370(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2371(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2372(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2373(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2374(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2375(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2376(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2377(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2378(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2379(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2380(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2381(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2382(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2383(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2384(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2385(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2386(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2387(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2388(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2389(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2390(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2391(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2392(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2393(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2394(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2395(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2396(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2397(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2398(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2399(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2400(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2401(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2402(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2403(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2404(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2405(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2406(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2407(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2408(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2409(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2410(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2411(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2412(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2413(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2414(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2415(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2416(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2417(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2418(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2419(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2420(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2421(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2422(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2423(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2424(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2425(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2426(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2427(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2428(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2429(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2430(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2431(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2432(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2433(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2434(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2435(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2436(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2437(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2438(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2439(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2440(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2441(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2442(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2443(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2444(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2445(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2446(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2447(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2448(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2449(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2450(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2451(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2452(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2453(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2454(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2455(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2456(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2457(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2458(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2459(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2460(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2461(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2462(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2463(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2464(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2465(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2466(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2467(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2468(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2469(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2470(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2471(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2472(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2473(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2474(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2475(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2476(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2477(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2478(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2479(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2480(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2481(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2482(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2483(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2484(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2485(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2486(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2487(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2488(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2489(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2490(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2491(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2492(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2493(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2494(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2495(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2496(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2497(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2498(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2499(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2500(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2501(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2502(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2503(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2504(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2505(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2506(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2507(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2508(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2509(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2510(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2511(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2512(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2513(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2514(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2515(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2516(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2517(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2518(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2519(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2520(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2521(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2522(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2523(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2524(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2525(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2526(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2527(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2528(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2529(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2530(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2531(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2532(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2533(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2534(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2535(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2536(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2537(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2538(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2539(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2540(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2541(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2542(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2543(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2544(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2545(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2546(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2547(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2548(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2549(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2550(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2551(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2552(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2553(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2554(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2555(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2556(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2557(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2558(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2559(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2560(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2561(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2562(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2563(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2564(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2565(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2566(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2567(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2568(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2569(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2570(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2571(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2572(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2573(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2574(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2575(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2576(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2577(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2578(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2579(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2580(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2581(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2582(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2583(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2584(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2585(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2586(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2587(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2588(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2589(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2590(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2591(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2592(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2593(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2594(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2595(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2596(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2597(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2598(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2599(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2600(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2601(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2602(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2603(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2604(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2605(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2606(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2607(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2608(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2609(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2610(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2611(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2612(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2613(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2614(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2615(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2616(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2617(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2618(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2619(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2620(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2621(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2622(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2623(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2624(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2625(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2626(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2627(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2628(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2629(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2630(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2631(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2632(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2633(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2634(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2635(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2636(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2637(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2638(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2639(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2640(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2641(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2642(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2643(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2644(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2645(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2646(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2647(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2648(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2649(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2650(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2651(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2652(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2653(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2654(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2655(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2656(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2657(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2658(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2659(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2660(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2661(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2662(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2663(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2664(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2665(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2666(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2667(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2668(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2669(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2670(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2671(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2672(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2673(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2674(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2675(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2676(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2677(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2678(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2679(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2680(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2681(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2682(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2683(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2684(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2685(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2686(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2687(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2688(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2689(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2690(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2691(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2692(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2693(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2694(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2695(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2696(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2697(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2698(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2699(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2700(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2701(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2702(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2703(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2704(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2705(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2706(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2707(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2708(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2709(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2710(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2711(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2712(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2713(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2714(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2715(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2716(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2717(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2718(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2719(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2720(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2721(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2722(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2723(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2724(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2725(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2726(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2727(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2728(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2729(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2730(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2731(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2732(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2733(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2734(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2735(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2736(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2737(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2738(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2739(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2740(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2741(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2742(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2743(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2744(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2745(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2746(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2747(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2748(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2749(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2750(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2751(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2752(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2753(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2754(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2755(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2756(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2757(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2758(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2759(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2760(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2761(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2762(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2763(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2764(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2765(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2766(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2767(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2768(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2769(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2770(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2771(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2772(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2773(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2774(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2775(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2776(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2777(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2778(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2779(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2780(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2781(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2782(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2783(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2784(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2785(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2786(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2787(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2788(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2789(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2790(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2791(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2792(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2793(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2794(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2795(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2796(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2797(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2798(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2799(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2800(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2801(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2802(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2803(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2804(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2805(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2806(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2807(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2808(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2809(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2810(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2811(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2812(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2813(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2814(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2815(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2816(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2817(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2818(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2819(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2820(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2821(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2822(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2823(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2824(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2825(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2826(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2827(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2828(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2829(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2830(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2831(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2832(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2833(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2834(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2835(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2836(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2837(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2838(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2839(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2840(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2841(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2842(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2843(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2844(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2845(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2846(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2847(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2848(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2849(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2850(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2851(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2852(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2853(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2854(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2855(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2856(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2857(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2858(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2859(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2860(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2861(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2862(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2863(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2864(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2865(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2866(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2867(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2868(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2869(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2870(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2871(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2872(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2873(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2874(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2875(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2876(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2877(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2878(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2879(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2880(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2881(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2882(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2883(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2884(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2885(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2886(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2887(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2888(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2889(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2890(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2891(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2892(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2893(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2894(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2895(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2896(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2897(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2898(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2899(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2900(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2901(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2902(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2903(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2904(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2905(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2906(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2907(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2908(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2909(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2910(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2911(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2912(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2913(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2914(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2915(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2916(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2917(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2918(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2919(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2920(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2921(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2922(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2923(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2924(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2925(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2926(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2927(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2928(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2929(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2930(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2931(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2932(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2933(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2934(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2935(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2936(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2937(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2938(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2939(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2940(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2941(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2942(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2943(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2944(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2945(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2946(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2947(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2948(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2949(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2950(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2951(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2952(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2953(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2954(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2955(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2956(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2957(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2958(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2959(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2960(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2961(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2962(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2963(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2964(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2965(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2966(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2967(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2968(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2969(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2970(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2971(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2972(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2973(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2974(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2975(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2976(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2977(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2978(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2979(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2980(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2981(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2982(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2983(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2984(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2985(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2986(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2987(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2988(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2989(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2990(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2991(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2992(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2993(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2994(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2995(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2996(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2997(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2998(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo2999(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3000(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3001(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3002(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3003(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3004(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3005(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3006(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3007(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3008(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3009(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3010(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3011(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3012(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3013(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3014(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3015(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3016(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3017(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3018(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3019(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3020(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3021(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3022(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3023(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3024(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3025(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3026(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3027(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3028(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3029(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3030(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3031(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3032(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3033(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3034(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3035(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3036(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3037(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3038(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3039(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3040(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3041(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3042(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3043(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3044(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3045(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3046(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3047(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3048(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3049(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3050(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3051(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3052(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3053(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3054(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3055(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3056(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3057(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3058(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3059(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3060(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3061(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3062(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3063(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3064(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3065(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3066(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3067(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3068(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3069(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3070(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3071(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3072(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3073(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3074(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3075(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3076(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3077(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3078(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3079(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3080(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3081(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3082(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3083(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3084(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3085(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3086(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3087(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3088(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3089(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3090(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3091(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3092(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3093(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3094(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3095(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3096(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3097(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3098(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3099(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3100(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3101(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3102(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3103(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3104(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3105(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3106(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3107(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3108(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3109(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3110(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3111(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3112(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3113(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3114(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3115(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3116(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3117(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3118(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3119(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3120(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3121(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3122(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3123(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3124(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3125(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3126(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3127(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3128(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3129(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3130(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3131(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3132(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3133(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3134(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3135(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3136(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3137(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3138(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3139(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3140(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3141(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3142(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3143(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3144(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3145(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3146(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3147(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3148(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3149(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3150(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3151(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3152(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3153(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3154(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3155(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3156(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3157(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3158(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3159(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3160(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3161(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3162(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3163(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3164(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3165(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3166(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3167(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3168(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3169(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3170(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3171(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3172(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3173(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3174(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3175(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3176(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3177(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3178(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3179(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3180(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3181(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3182(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3183(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3184(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3185(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3186(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3187(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3188(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3189(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3190(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3191(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3192(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3193(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3194(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3195(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3196(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3197(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3198(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3199(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3200(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3201(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3202(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3203(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3204(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3205(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3206(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3207(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3208(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3209(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3210(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3211(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3212(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3213(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3214(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3215(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3216(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3217(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3218(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3219(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3220(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3221(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3222(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3223(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3224(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3225(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3226(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3227(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3228(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3229(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3230(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3231(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3232(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3233(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3234(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3235(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3236(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3237(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3238(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3239(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3240(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3241(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3242(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3243(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3244(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3245(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3246(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3247(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3248(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3249(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3250(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3251(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3252(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3253(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3254(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3255(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3256(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3257(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3258(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3259(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3260(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3261(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3262(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3263(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3264(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3265(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3266(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3267(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3268(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3269(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3270(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3271(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3272(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3273(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3274(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3275(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3276(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3277(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3278(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3279(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3280(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3281(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3282(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3283(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3284(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3285(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3286(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3287(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3288(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3289(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3290(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3291(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3292(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3293(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3294(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3295(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3296(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3297(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3298(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3299(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3300(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3301(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3302(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3303(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3304(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3305(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3306(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3307(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3308(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3309(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3310(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3311(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3312(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3313(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3314(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3315(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3316(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3317(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3318(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3319(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3320(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3321(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3322(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3323(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3324(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3325(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3326(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3327(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3328(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3329(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3330(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3331(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3332(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3333(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3334(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3335(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3336(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3337(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3338(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3339(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3340(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3341(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3342(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3343(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3344(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3345(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3346(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3347(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3348(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3349(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3350(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3351(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3352(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3353(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3354(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3355(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3356(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3357(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3358(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3359(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3360(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3361(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3362(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3363(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3364(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3365(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3366(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3367(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3368(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3369(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3370(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3371(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3372(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3373(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3374(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3375(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3376(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3377(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3378(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3379(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3380(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3381(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3382(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3383(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3384(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3385(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3386(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3387(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3388(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3389(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3390(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3391(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3392(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3393(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3394(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3395(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3396(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3397(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3398(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3399(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3400(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3401(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3402(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3403(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3404(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3405(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3406(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3407(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3408(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3409(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3410(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3411(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3412(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3413(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3414(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3415(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3416(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3417(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3418(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3419(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3420(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3421(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3422(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3423(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3424(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3425(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3426(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3427(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3428(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3429(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3430(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3431(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3432(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3433(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3434(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3435(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3436(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3437(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3438(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3439(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3440(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3441(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3442(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3443(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3444(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3445(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3446(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3447(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3448(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3449(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3450(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3451(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3452(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3453(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3454(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3455(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3456(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3457(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3458(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3459(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3460(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3461(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3462(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3463(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3464(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3465(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3466(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3467(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3468(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3469(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3470(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3471(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3472(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3473(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3474(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3475(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3476(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3477(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3478(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3479(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3480(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3481(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3482(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3483(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3484(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3485(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3486(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3487(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3488(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3489(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3490(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3491(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3492(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3493(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3494(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3495(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3496(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3497(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3498(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3499(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3500(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3501(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3502(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3503(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3504(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3505(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3506(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3507(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3508(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3509(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3510(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3511(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3512(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3513(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3514(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3515(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3516(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3517(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3518(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3519(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3520(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3521(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3522(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3523(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3524(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3525(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3526(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3527(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3528(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3529(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3530(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3531(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3532(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3533(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3534(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3535(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3536(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3537(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3538(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3539(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3540(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3541(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3542(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3543(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3544(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3545(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3546(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3547(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3548(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3549(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3550(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3551(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3552(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3553(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3554(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3555(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3556(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3557(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3558(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3559(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3560(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3561(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3562(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3563(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3564(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3565(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3566(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3567(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3568(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3569(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3570(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3571(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3572(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3573(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3574(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3575(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3576(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3577(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3578(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3579(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3580(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3581(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3582(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3583(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3584(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3585(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3586(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3587(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3588(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3589(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3590(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3591(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3592(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3593(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3594(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3595(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3596(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3597(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3598(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3599(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3600(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3601(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3602(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3603(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3604(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3605(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3606(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3607(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3608(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3609(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3610(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3611(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3612(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3613(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3614(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3615(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3616(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3617(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3618(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3619(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3620(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3621(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3622(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3623(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3624(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3625(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3626(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3627(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3628(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3629(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3630(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3631(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3632(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3633(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3634(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3635(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3636(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3637(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3638(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3639(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3640(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3641(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3642(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3643(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3644(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3645(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3646(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3647(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3648(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3649(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3650(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3651(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3652(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3653(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3654(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3655(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3656(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3657(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3658(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3659(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3660(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3661(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3662(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3663(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3664(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3665(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3666(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3667(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3668(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3669(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3670(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3671(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3672(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3673(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3674(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3675(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3676(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3677(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3678(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3679(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3680(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3681(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3682(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3683(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3684(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3685(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3686(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3687(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3688(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3689(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3690(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3691(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3692(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3693(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3694(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3695(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3696(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3697(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3698(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3699(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3700(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3701(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3702(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3703(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3704(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3705(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3706(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3707(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3708(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3709(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3710(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3711(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3712(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3713(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3714(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3715(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3716(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3717(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3718(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3719(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3720(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3721(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3722(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3723(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3724(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3725(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3726(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3727(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3728(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3729(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3730(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3731(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3732(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3733(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3734(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3735(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3736(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3737(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3738(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3739(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3740(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3741(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3742(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3743(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3744(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3745(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3746(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3747(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3748(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3749(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3750(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3751(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3752(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3753(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3754(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3755(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3756(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3757(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3758(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3759(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3760(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3761(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3762(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3763(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3764(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3765(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3766(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3767(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3768(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3769(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3770(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3771(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3772(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3773(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3774(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3775(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3776(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3777(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3778(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3779(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3780(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3781(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3782(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3783(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3784(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3785(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3786(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3787(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3788(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3789(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3790(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3791(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3792(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3793(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3794(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3795(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3796(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3797(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3798(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3799(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3800(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3801(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3802(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3803(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3804(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3805(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3806(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3807(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3808(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3809(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3810(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3811(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3812(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3813(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3814(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3815(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3816(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3817(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3818(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3819(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3820(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3821(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3822(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3823(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3824(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3825(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3826(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3827(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3828(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3829(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3830(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3831(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3832(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3833(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3834(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3835(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3836(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3837(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3838(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3839(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3840(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3841(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3842(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3843(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3844(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3845(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3846(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3847(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3848(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3849(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3850(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3851(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3852(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3853(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3854(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3855(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3856(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3857(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3858(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3859(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3860(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3861(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3862(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3863(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3864(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3865(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3866(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3867(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3868(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3869(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3870(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3871(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3872(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3873(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3874(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3875(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3876(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3877(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3878(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3879(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3880(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3881(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3882(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3883(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3884(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3885(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3886(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3887(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3888(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3889(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3890(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3891(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3892(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3893(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3894(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3895(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3896(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3897(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3898(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3899(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3900(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3901(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3902(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3903(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3904(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3905(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3906(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3907(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3908(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3909(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3910(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3911(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3912(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3913(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3914(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3915(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3916(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3917(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3918(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3919(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3920(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3921(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3922(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3923(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3924(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3925(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3926(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3927(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3928(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3929(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3930(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3931(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3932(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3933(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3934(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3935(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3936(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3937(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3938(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3939(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3940(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3941(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3942(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3943(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3944(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3945(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3946(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3947(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3948(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3949(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3950(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3951(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3952(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3953(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3954(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3955(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3956(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3957(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3958(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3959(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3960(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3961(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3962(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3963(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3964(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3965(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3966(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3967(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3968(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3969(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3970(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3971(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3972(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3973(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3974(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3975(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3976(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3977(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3978(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3979(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3980(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3981(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3982(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3983(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3984(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3985(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3986(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3987(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3988(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3989(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3990(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3991(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3992(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3993(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3994(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3995(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3996(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3997(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3998(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo3999(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4000(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4001(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4002(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4003(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4004(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4005(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4006(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4007(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4008(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4009(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4010(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4011(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4012(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4013(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4014(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4015(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4016(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4017(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4018(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4019(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4020(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4021(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4022(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4023(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4024(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4025(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4026(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4027(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4028(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4029(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4030(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4031(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4032(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4033(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4034(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4035(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4036(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4037(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4038(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4039(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4040(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4041(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4042(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4043(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4044(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4045(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4046(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4047(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4048(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4049(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4050(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4051(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4052(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4053(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4054(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4055(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4056(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4057(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4058(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4059(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4060(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4061(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4062(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4063(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4064(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4065(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4066(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4067(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4068(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4069(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4070(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4071(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4072(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4073(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4074(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4075(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4076(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4077(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4078(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4079(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4080(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4081(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4082(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4083(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4084(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4085(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4086(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4087(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4088(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4089(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4090(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4091(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4092(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4093(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4094(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4095(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4096(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4097(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4098(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4099(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4100(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4101(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4102(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4103(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4104(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4105(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4106(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4107(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4108(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4109(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4110(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4111(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4112(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4113(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4114(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4115(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4116(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4117(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4118(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4119(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4120(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4121(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4122(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4123(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4124(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4125(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4126(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4127(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4128(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4129(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4130(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4131(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4132(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4133(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4134(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4135(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4136(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4137(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4138(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4139(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4140(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4141(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4142(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4143(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4144(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4145(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4146(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4147(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4148(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4149(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4150(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4151(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4152(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4153(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4154(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4155(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4156(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4157(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4158(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4159(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4160(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4161(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4162(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4163(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4164(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4165(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4166(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4167(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4168(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4169(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4170(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4171(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4172(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4173(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4174(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4175(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4176(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4177(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4178(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4179(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4180(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4181(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4182(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4183(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4184(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4185(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4186(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4187(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4188(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4189(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4190(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4191(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4192(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4193(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4194(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4195(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4196(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4197(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4198(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4199(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4200(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4201(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4202(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4203(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4204(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4205(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4206(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4207(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4208(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4209(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4210(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4211(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4212(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4213(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4214(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4215(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4216(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4217(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4218(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4219(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4220(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4221(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4222(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4223(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4224(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4225(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4226(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4227(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4228(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4229(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4230(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4231(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4232(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4233(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4234(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4235(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4236(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4237(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4238(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4239(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4240(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4241(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4242(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4243(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4244(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4245(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4246(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4247(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4248(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4249(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4250(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4251(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4252(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4253(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4254(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4255(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4256(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4257(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4258(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4259(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4260(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4261(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4262(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4263(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4264(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4265(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4266(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4267(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4268(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4269(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4270(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4271(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4272(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4273(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4274(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4275(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4276(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4277(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4278(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4279(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4280(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4281(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4282(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4283(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4284(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4285(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4286(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4287(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4288(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4289(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4290(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4291(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4292(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4293(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4294(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4295(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4296(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4297(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4298(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4299(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4300(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4301(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4302(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4303(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4304(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4305(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4306(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4307(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4308(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4309(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4310(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4311(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4312(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4313(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4314(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4315(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4316(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4317(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4318(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4319(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4320(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4321(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4322(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4323(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4324(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4325(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4326(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4327(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4328(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4329(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4330(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4331(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4332(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4333(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4334(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4335(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4336(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4337(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4338(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4339(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4340(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4341(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4342(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4343(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4344(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4345(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4346(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4347(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4348(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4349(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4350(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4351(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4352(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4353(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4354(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4355(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4356(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4357(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4358(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4359(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4360(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4361(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4362(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4363(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4364(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4365(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4366(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4367(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4368(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4369(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4370(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4371(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4372(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4373(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4374(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4375(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4376(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4377(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4378(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4379(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4380(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4381(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4382(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4383(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4384(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4385(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4386(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4387(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4388(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4389(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4390(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4391(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4392(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4393(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4394(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4395(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4396(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4397(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4398(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4399(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4400(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4401(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4402(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4403(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4404(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4405(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4406(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4407(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4408(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4409(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4410(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4411(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4412(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4413(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4414(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4415(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4416(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4417(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4418(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4419(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4420(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4421(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4422(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4423(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4424(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4425(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4426(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4427(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4428(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4429(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4430(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4431(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4432(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4433(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4434(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4435(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4436(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4437(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4438(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4439(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4440(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4441(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4442(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4443(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4444(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4445(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4446(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4447(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4448(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4449(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4450(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4451(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4452(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4453(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4454(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4455(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4456(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4457(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4458(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4459(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4460(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4461(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4462(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4463(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4464(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4465(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4466(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4467(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4468(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4469(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4470(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4471(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4472(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4473(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4474(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4475(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4476(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4477(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4478(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4479(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4480(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4481(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4482(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4483(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4484(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4485(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4486(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4487(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4488(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4489(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4490(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4491(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4492(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4493(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4494(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4495(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4496(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4497(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4498(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4499(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4500(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4501(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4502(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4503(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4504(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4505(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4506(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4507(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4508(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4509(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4510(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4511(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4512(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4513(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4514(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4515(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4516(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4517(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4518(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4519(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4520(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4521(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4522(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4523(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4524(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4525(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4526(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4527(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4528(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4529(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4530(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4531(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4532(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4533(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4534(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4535(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4536(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4537(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4538(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4539(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4540(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4541(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4542(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4543(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4544(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4545(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4546(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4547(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4548(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4549(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4550(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4551(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4552(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4553(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4554(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4555(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4556(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4557(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4558(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4559(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4560(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4561(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4562(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4563(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4564(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4565(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4566(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4567(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4568(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4569(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4570(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4571(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4572(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4573(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4574(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4575(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4576(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4577(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4578(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4579(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4580(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4581(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4582(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4583(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4584(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4585(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4586(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4587(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4588(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4589(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4590(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4591(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4592(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4593(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4594(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4595(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4596(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4597(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4598(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4599(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4600(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4601(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4602(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4603(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4604(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4605(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4606(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4607(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4608(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4609(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4610(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4611(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4612(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4613(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4614(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4615(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4616(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4617(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4618(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4619(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4620(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4621(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4622(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4623(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4624(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4625(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4626(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4627(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4628(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4629(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4630(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4631(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4632(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4633(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4634(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4635(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4636(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4637(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4638(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4639(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4640(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4641(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4642(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4643(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4644(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4645(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4646(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4647(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4648(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4649(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4650(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4651(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4652(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4653(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4654(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4655(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4656(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4657(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4658(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4659(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4660(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4661(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4662(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4663(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4664(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4665(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4666(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4667(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4668(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4669(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4670(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4671(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4672(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4673(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4674(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4675(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4676(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4677(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4678(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4679(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4680(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4681(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4682(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4683(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4684(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4685(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4686(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4687(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4688(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4689(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4690(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4691(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4692(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4693(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4694(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4695(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4696(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4697(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4698(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4699(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4700(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4701(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4702(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4703(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4704(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4705(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4706(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4707(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4708(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4709(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4710(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4711(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4712(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4713(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4714(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4715(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4716(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4717(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4718(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4719(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4720(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4721(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4722(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4723(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4724(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4725(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4726(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4727(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4728(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4729(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4730(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4731(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4732(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4733(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4734(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4735(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4736(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4737(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4738(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4739(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4740(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4741(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4742(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4743(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4744(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4745(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4746(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4747(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4748(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4749(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4750(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4751(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4752(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4753(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4754(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4755(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4756(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4757(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4758(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4759(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4760(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4761(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4762(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4763(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4764(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4765(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4766(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4767(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4768(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4769(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4770(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4771(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4772(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4773(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4774(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4775(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4776(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4777(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4778(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4779(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4780(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4781(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4782(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4783(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4784(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4785(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4786(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4787(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4788(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4789(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4790(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4791(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4792(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4793(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4794(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4795(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4796(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4797(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4798(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4799(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4800(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4801(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4802(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4803(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4804(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4805(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4806(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4807(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4808(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4809(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4810(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4811(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4812(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4813(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4814(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4815(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4816(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4817(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4818(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4819(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4820(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4821(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4822(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4823(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4824(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4825(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4826(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4827(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4828(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4829(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4830(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4831(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4832(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4833(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4834(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4835(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4836(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4837(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4838(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4839(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4840(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4841(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4842(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4843(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4844(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4845(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4846(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4847(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4848(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4849(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4850(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4851(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4852(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4853(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4854(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4855(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4856(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4857(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4858(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4859(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4860(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4861(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4862(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4863(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4864(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4865(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4866(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4867(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4868(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4869(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4870(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4871(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4872(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4873(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4874(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4875(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4876(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4877(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4878(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4879(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4880(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4881(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4882(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4883(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4884(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4885(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4886(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4887(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4888(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4889(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4890(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4891(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4892(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4893(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4894(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4895(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4896(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4897(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4898(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4899(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4900(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4901(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4902(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4903(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4904(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4905(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4906(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4907(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4908(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4909(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4910(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4911(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4912(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4913(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4914(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4915(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4916(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4917(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4918(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4919(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4920(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4921(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4922(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4923(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4924(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4925(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4926(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4927(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4928(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4929(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4930(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4931(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4932(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4933(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4934(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4935(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4936(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4937(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4938(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4939(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4940(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4941(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4942(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4943(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4944(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4945(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4946(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4947(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4948(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4949(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4950(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4951(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4952(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4953(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4954(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4955(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4956(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4957(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4958(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4959(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4960(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4961(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4962(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4963(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4964(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4965(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4966(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4967(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4968(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4969(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4970(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4971(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4972(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4973(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4974(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4975(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4976(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4977(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4978(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4979(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4980(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4981(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4982(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4983(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4984(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4985(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4986(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4987(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4988(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4989(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4990(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4991(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4992(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4993(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4994(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4995(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4996(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4997(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4998(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo4999(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5000(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5001(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5002(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5003(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5004(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5005(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5006(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5007(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5008(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5009(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5010(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5011(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5012(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5013(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5014(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5015(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5016(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5017(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5018(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5019(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5020(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5021(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5022(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5023(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5024(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5025(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5026(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5027(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5028(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5029(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5030(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5031(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5032(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5033(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5034(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5035(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5036(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5037(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5038(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5039(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5040(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5041(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5042(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5043(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5044(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5045(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5046(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5047(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5048(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5049(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5050(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5051(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5052(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5053(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5054(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5055(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5056(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5057(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5058(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5059(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5060(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5061(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5062(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5063(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5064(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5065(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5066(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5067(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5068(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5069(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5070(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5071(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5072(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5073(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5074(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5075(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5076(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5077(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5078(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5079(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5080(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5081(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5082(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5083(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5084(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5085(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5086(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5087(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5088(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5089(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5090(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5091(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5092(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5093(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5094(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5095(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5096(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5097(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5098(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5099(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5100(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5101(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5102(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5103(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5104(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5105(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5106(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5107(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5108(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5109(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5110(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5111(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5112(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5113(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5114(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5115(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5116(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5117(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5118(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5119(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5120(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5121(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5122(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5123(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5124(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5125(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5126(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5127(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5128(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5129(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5130(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5131(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5132(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5133(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5134(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5135(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5136(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5137(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5138(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5139(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5140(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5141(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5142(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5143(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5144(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5145(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5146(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5147(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5148(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5149(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5150(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5151(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5152(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5153(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5154(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5155(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5156(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5157(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5158(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5159(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5160(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5161(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5162(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5163(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5164(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5165(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5166(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5167(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5168(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5169(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5170(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5171(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5172(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5173(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5174(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5175(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5176(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5177(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5178(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5179(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5180(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5181(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5182(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5183(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5184(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5185(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5186(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5187(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5188(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5189(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5190(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5191(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5192(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5193(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5194(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5195(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5196(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5197(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5198(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5199(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5200(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5201(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5202(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5203(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5204(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5205(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5206(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5207(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5208(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5209(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5210(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5211(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5212(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5213(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5214(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5215(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5216(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5217(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5218(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5219(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5220(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5221(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5222(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5223(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5224(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5225(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5226(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5227(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5228(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5229(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5230(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5231(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5232(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5233(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5234(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5235(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5236(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5237(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5238(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5239(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5240(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5241(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5242(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5243(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5244(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5245(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5246(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5247(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5248(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5249(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5250(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5251(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5252(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5253(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5254(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5255(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5256(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5257(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5258(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5259(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5260(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5261(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5262(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5263(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5264(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5265(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5266(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5267(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5268(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5269(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5270(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5271(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5272(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5273(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5274(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5275(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5276(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5277(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5278(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5279(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5280(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5281(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5282(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5283(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5284(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5285(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5286(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5287(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5288(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5289(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5290(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5291(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5292(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5293(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5294(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5295(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5296(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5297(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5298(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5299(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5300(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5301(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5302(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5303(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5304(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5305(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5306(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5307(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5308(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5309(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5310(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5311(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5312(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5313(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5314(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5315(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5316(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5317(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5318(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5319(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5320(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5321(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5322(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5323(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5324(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5325(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5326(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5327(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5328(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5329(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5330(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5331(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5332(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5333(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5334(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5335(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5336(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5337(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5338(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5339(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5340(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5341(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5342(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5343(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5344(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5345(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5346(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5347(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5348(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5349(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5350(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5351(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5352(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5353(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5354(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5355(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5356(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5357(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5358(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5359(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5360(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5361(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5362(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5363(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5364(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5365(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5366(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5367(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5368(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5369(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5370(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5371(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5372(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5373(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5374(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5375(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5376(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5377(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5378(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5379(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5380(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5381(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5382(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5383(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5384(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5385(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5386(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5387(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5388(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5389(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5390(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5391(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5392(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5393(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5394(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5395(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5396(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5397(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5398(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5399(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5400(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5401(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5402(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5403(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5404(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5405(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5406(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5407(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5408(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5409(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5410(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5411(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5412(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5413(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5414(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5415(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5416(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5417(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5418(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5419(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5420(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5421(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5422(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5423(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5424(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5425(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5426(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5427(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5428(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5429(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5430(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5431(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5432(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5433(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5434(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5435(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5436(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5437(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5438(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5439(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5440(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5441(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5442(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5443(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5444(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5445(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5446(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5447(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5448(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5449(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5450(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5451(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5452(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5453(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5454(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5455(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5456(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5457(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5458(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5459(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5460(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5461(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5462(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5463(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5464(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5465(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5466(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5467(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5468(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5469(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5470(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5471(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5472(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5473(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5474(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5475(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5476(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5477(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5478(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5479(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5480(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5481(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5482(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5483(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5484(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5485(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5486(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5487(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5488(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5489(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5490(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5491(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5492(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5493(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5494(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5495(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5496(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5497(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5498(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5499(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5500(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5501(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5502(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5503(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5504(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5505(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5506(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5507(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5508(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5509(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5510(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5511(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5512(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5513(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5514(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5515(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5516(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5517(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5518(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5519(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5520(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5521(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5522(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5523(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5524(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5525(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5526(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5527(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5528(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5529(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5530(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5531(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5532(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5533(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5534(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5535(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5536(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5537(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5538(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5539(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5540(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5541(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5542(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5543(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5544(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5545(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5546(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5547(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5548(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5549(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5550(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5551(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5552(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5553(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5554(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5555(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5556(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5557(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5558(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5559(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5560(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5561(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5562(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5563(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5564(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5565(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5566(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5567(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5568(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5569(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5570(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5571(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5572(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5573(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5574(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5575(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5576(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5577(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5578(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5579(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5580(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5581(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5582(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5583(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5584(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5585(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5586(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5587(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5588(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5589(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5590(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5591(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5592(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5593(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5594(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5595(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5596(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5597(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5598(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5599(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5600(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5601(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5602(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5603(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5604(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5605(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5606(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5607(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5608(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5609(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5610(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5611(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5612(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5613(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5614(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5615(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5616(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5617(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5618(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5619(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5620(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5621(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5622(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5623(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5624(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5625(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5626(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5627(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5628(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5629(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5630(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5631(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5632(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5633(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5634(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5635(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5636(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5637(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5638(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5639(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5640(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5641(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5642(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5643(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5644(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5645(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5646(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5647(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5648(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5649(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5650(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5651(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5652(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5653(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5654(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5655(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5656(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5657(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5658(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5659(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5660(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5661(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5662(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5663(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5664(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5665(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5666(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5667(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5668(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5669(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5670(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5671(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5672(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5673(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5674(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5675(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5676(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5677(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5678(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5679(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5680(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5681(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5682(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5683(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5684(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5685(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5686(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5687(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5688(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5689(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5690(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5691(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5692(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5693(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5694(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5695(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5696(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5697(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5698(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5699(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5700(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5701(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5702(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5703(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5704(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5705(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5706(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5707(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5708(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5709(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5710(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5711(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5712(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5713(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5714(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5715(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5716(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5717(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5718(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5719(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5720(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5721(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5722(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5723(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5724(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5725(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5726(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5727(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5728(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5729(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5730(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5731(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5732(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5733(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5734(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5735(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5736(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5737(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5738(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5739(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5740(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5741(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5742(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5743(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5744(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5745(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5746(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5747(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5748(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5749(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5750(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5751(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5752(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5753(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5754(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5755(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5756(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5757(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5758(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5759(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5760(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5761(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5762(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5763(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5764(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5765(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5766(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5767(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5768(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5769(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5770(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5771(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5772(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5773(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5774(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5775(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5776(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5777(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5778(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5779(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5780(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5781(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5782(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5783(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5784(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5785(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5786(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5787(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5788(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5789(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5790(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5791(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5792(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5793(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5794(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5795(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5796(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5797(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5798(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5799(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5800(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5801(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5802(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5803(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5804(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5805(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5806(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5807(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5808(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5809(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5810(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5811(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5812(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5813(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5814(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5815(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5816(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5817(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5818(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5819(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5820(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5821(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5822(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5823(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5824(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5825(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5826(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5827(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5828(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5829(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5830(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5831(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5832(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5833(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5834(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5835(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5836(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5837(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5838(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5839(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5840(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5841(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5842(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5843(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5844(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5845(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5846(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5847(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5848(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5849(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5850(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5851(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5852(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5853(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5854(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5855(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5856(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5857(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5858(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5859(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5860(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5861(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5862(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5863(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5864(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5865(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5866(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5867(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5868(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5869(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5870(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5871(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5872(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5873(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5874(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5875(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5876(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5877(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5878(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5879(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5880(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5881(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5882(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5883(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5884(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5885(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5886(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5887(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5888(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5889(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5890(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5891(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5892(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5893(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5894(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5895(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5896(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5897(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5898(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5899(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5900(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5901(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5902(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5903(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5904(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5905(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5906(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5907(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5908(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5909(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5910(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5911(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5912(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5913(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5914(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5915(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5916(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5917(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5918(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5919(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5920(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5921(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5922(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5923(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5924(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5925(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5926(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5927(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5928(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5929(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5930(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5931(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5932(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5933(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5934(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5935(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5936(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5937(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5938(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5939(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5940(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5941(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5942(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5943(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5944(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5945(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5946(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5947(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5948(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5949(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5950(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5951(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5952(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5953(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5954(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5955(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5956(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5957(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5958(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5959(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5960(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5961(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5962(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5963(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5964(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5965(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5966(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5967(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5968(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5969(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5970(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5971(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5972(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5973(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5974(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5975(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5976(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5977(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5978(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5979(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5980(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5981(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5982(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5983(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5984(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5985(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5986(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5987(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5988(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5989(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5990(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5991(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5992(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5993(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5994(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5995(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5996(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5997(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5998(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo5999(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6000(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6001(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6002(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6003(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6004(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6005(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6006(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6007(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6008(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6009(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6010(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6011(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6012(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6013(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6014(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6015(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6016(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6017(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6018(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6019(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6020(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6021(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6022(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6023(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6024(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6025(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6026(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6027(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6028(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6029(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6030(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6031(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6032(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6033(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6034(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6035(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6036(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6037(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6038(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6039(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6040(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6041(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6042(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6043(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6044(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6045(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6046(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6047(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6048(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6049(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6050(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6051(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6052(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6053(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6054(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6055(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6056(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6057(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6058(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6059(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6060(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6061(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6062(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6063(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6064(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6065(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6066(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6067(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6068(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6069(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6070(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6071(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6072(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6073(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6074(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6075(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6076(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6077(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6078(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6079(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6080(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6081(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6082(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6083(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6084(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6085(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6086(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6087(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6088(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6089(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6090(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6091(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6092(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6093(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6094(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6095(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6096(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6097(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6098(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6099(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6100(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6101(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6102(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6103(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6104(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6105(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6106(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6107(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6108(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6109(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6110(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6111(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6112(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6113(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6114(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6115(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6116(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6117(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6118(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6119(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6120(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6121(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6122(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6123(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6124(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6125(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6126(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6127(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6128(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6129(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6130(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6131(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6132(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6133(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6134(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6135(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6136(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6137(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6138(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6139(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6140(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6141(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6142(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6143(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6144(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6145(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6146(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6147(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6148(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6149(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6150(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6151(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6152(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6153(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6154(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6155(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6156(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6157(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6158(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6159(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6160(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6161(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6162(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6163(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6164(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6165(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6166(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6167(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6168(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6169(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6170(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6171(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6172(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6173(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6174(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6175(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6176(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6177(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6178(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6179(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6180(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6181(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6182(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6183(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6184(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6185(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6186(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6187(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6188(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6189(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6190(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6191(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6192(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6193(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6194(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6195(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6196(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6197(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6198(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6199(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6200(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6201(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6202(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6203(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6204(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6205(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6206(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6207(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6208(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6209(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6210(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6211(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6212(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6213(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6214(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6215(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6216(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6217(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6218(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6219(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6220(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6221(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6222(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6223(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6224(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6225(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6226(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6227(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6228(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6229(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6230(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6231(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6232(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6233(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6234(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6235(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6236(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6237(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6238(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6239(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6240(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6241(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6242(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6243(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6244(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6245(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6246(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6247(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6248(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6249(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6250(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6251(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6252(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6253(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6254(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6255(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6256(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6257(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6258(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6259(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6260(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6261(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6262(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6263(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6264(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6265(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6266(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6267(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6268(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6269(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6270(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6271(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6272(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6273(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6274(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6275(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6276(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6277(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6278(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6279(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6280(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6281(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6282(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6283(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6284(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6285(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6286(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6287(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6288(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6289(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6290(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6291(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6292(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6293(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6294(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6295(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6296(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6297(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6298(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6299(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6300(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6301(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6302(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6303(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6304(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6305(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6306(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6307(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6308(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6309(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6310(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6311(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6312(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6313(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6314(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6315(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6316(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6317(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6318(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6319(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6320(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6321(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6322(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6323(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6324(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6325(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6326(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6327(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6328(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6329(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6330(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6331(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6332(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6333(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6334(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6335(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6336(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6337(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6338(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6339(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6340(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6341(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6342(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6343(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6344(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6345(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6346(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6347(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6348(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6349(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6350(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6351(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6352(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6353(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6354(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6355(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6356(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6357(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6358(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6359(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6360(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6361(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6362(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6363(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6364(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6365(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6366(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6367(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6368(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6369(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6370(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6371(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6372(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6373(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6374(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6375(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6376(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6377(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6378(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6379(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6380(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6381(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6382(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6383(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6384(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6385(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6386(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6387(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6388(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6389(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6390(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6391(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6392(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6393(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6394(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6395(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6396(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6397(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6398(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6399(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6400(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6401(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6402(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6403(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6404(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6405(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6406(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6407(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6408(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6409(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6410(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6411(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6412(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6413(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6414(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6415(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6416(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6417(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6418(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6419(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6420(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6421(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6422(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6423(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6424(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6425(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6426(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6427(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6428(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6429(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6430(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6431(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6432(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6433(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6434(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6435(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6436(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6437(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6438(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6439(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6440(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6441(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6442(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6443(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6444(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6445(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6446(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6447(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6448(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6449(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6450(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6451(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6452(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6453(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6454(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6455(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6456(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6457(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6458(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6459(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6460(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6461(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6462(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6463(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6464(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6465(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6466(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6467(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6468(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6469(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6470(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6471(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6472(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6473(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6474(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6475(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6476(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6477(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6478(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6479(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6480(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6481(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6482(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6483(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6484(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6485(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6486(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6487(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6488(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6489(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6490(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6491(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6492(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6493(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6494(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6495(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6496(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6497(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6498(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6499(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6500(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6501(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6502(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6503(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6504(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6505(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6506(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6507(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6508(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6509(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6510(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6511(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6512(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6513(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6514(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6515(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6516(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6517(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6518(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6519(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6520(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6521(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6522(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6523(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6524(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6525(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6526(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6527(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6528(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6529(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6530(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6531(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6532(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6533(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6534(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6535(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6536(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6537(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6538(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6539(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6540(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6541(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6542(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6543(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6544(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6545(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6546(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6547(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6548(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6549(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6550(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6551(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6552(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6553(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6554(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6555(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6556(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6557(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6558(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6559(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6560(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6561(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6562(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6563(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6564(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6565(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6566(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6567(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6568(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6569(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6570(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6571(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6572(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6573(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6574(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6575(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6576(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6577(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6578(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6579(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6580(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6581(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6582(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6583(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6584(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6585(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6586(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6587(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6588(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6589(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6590(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6591(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6592(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6593(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6594(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6595(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6596(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6597(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6598(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6599(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6600(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6601(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6602(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6603(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6604(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6605(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6606(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6607(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6608(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6609(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6610(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6611(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6612(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6613(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6614(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6615(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6616(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6617(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6618(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6619(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6620(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6621(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6622(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6623(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6624(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6625(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6626(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6627(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6628(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6629(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6630(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6631(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6632(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6633(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6634(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6635(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6636(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6637(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6638(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6639(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6640(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6641(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6642(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6643(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6644(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6645(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6646(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6647(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6648(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6649(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6650(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6651(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6652(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6653(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6654(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6655(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6656(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6657(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6658(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6659(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6660(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6661(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6662(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6663(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6664(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6665(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6666(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6667(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6668(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6669(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6670(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6671(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6672(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6673(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6674(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6675(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6676(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6677(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6678(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6679(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6680(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6681(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6682(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6683(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6684(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6685(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6686(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6687(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6688(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6689(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6690(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6691(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6692(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6693(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6694(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6695(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6696(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6697(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6698(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6699(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6700(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6701(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6702(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6703(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6704(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6705(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6706(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6707(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6708(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6709(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6710(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6711(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6712(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6713(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6714(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6715(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6716(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6717(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6718(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6719(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6720(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6721(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6722(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6723(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6724(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6725(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6726(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6727(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6728(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6729(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6730(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6731(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6732(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6733(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6734(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6735(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6736(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6737(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6738(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6739(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6740(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6741(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6742(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6743(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6744(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6745(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6746(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6747(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6748(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6749(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6750(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6751(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6752(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6753(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6754(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6755(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6756(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6757(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6758(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6759(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6760(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6761(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6762(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6763(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6764(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6765(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6766(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6767(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6768(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6769(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6770(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6771(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6772(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6773(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6774(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6775(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6776(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6777(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6778(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6779(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6780(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6781(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6782(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6783(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6784(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6785(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6786(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6787(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6788(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6789(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6790(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6791(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6792(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6793(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6794(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6795(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6796(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6797(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6798(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6799(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6800(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6801(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6802(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6803(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6804(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6805(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6806(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6807(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6808(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6809(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6810(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6811(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6812(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6813(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6814(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6815(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6816(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6817(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6818(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6819(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6820(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6821(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6822(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6823(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6824(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6825(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6826(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6827(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6828(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6829(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6830(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6831(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6832(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6833(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6834(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6835(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6836(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6837(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6838(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6839(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6840(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6841(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6842(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6843(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6844(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6845(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6846(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6847(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6848(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6849(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6850(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6851(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6852(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6853(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6854(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6855(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6856(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6857(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6858(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6859(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6860(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6861(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6862(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6863(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6864(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6865(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6866(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6867(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6868(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6869(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6870(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6871(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6872(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6873(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6874(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6875(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6876(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6877(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6878(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6879(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6880(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6881(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6882(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6883(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6884(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6885(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6886(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6887(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6888(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6889(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6890(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6891(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6892(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6893(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6894(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6895(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6896(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6897(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6898(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6899(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6900(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6901(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6902(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6903(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6904(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6905(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6906(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6907(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6908(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6909(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6910(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6911(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6912(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6913(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6914(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6915(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6916(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6917(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6918(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6919(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6920(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6921(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6922(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6923(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6924(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6925(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6926(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6927(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6928(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6929(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6930(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6931(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6932(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6933(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6934(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6935(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6936(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6937(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6938(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6939(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6940(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6941(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6942(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6943(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6944(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6945(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6946(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6947(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6948(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6949(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6950(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6951(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6952(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6953(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6954(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6955(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6956(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6957(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6958(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6959(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6960(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6961(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6962(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6963(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6964(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6965(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6966(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6967(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6968(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6969(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6970(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6971(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6972(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6973(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6974(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6975(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6976(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6977(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6978(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6979(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6980(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6981(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6982(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6983(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6984(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6985(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6986(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6987(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6988(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6989(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6990(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6991(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6992(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6993(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6994(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6995(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6996(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6997(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6998(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo6999(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7000(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7001(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7002(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7003(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7004(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7005(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7006(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7007(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7008(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7009(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7010(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7011(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7012(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7013(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7014(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7015(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7016(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7017(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7018(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7019(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7020(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7021(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7022(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7023(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7024(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7025(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7026(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7027(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7028(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7029(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7030(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7031(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7032(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7033(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7034(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7035(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7036(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7037(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7038(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7039(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7040(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7041(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7042(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7043(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7044(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7045(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7046(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7047(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7048(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7049(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7050(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7051(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7052(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7053(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7054(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7055(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7056(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7057(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7058(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7059(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7060(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7061(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7062(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7063(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7064(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7065(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7066(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7067(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7068(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7069(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7070(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7071(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7072(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7073(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7074(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7075(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7076(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7077(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7078(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7079(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7080(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7081(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7082(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7083(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7084(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7085(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7086(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7087(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7088(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7089(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7090(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7091(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7092(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7093(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7094(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7095(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7096(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7097(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7098(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7099(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7100(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7101(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7102(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7103(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7104(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7105(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7106(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7107(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7108(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7109(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7110(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7111(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7112(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7113(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7114(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7115(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7116(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7117(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7118(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7119(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7120(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7121(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7122(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7123(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7124(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7125(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7126(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7127(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7128(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7129(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7130(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7131(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7132(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7133(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7134(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7135(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7136(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7137(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7138(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7139(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7140(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7141(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7142(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7143(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7144(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7145(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7146(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7147(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7148(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7149(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7150(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7151(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7152(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7153(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7154(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7155(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7156(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7157(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7158(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7159(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7160(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7161(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7162(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7163(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7164(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7165(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7166(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7167(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7168(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7169(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7170(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7171(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7172(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7173(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7174(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7175(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7176(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7177(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7178(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7179(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7180(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7181(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7182(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7183(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7184(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7185(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7186(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7187(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7188(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7189(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7190(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7191(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7192(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7193(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7194(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7195(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7196(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7197(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7198(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7199(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7200(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7201(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7202(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7203(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7204(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7205(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7206(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7207(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7208(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7209(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7210(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7211(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7212(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7213(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7214(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7215(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7216(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7217(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7218(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7219(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7220(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7221(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7222(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7223(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7224(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7225(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7226(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7227(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7228(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7229(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7230(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7231(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7232(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7233(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7234(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7235(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7236(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7237(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7238(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7239(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7240(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7241(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7242(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7243(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7244(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7245(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7246(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7247(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7248(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7249(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7250(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7251(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7252(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7253(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7254(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7255(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7256(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7257(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7258(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7259(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7260(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7261(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7262(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7263(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7264(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7265(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7266(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7267(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7268(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7269(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7270(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7271(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7272(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7273(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7274(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7275(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7276(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7277(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7278(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7279(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7280(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7281(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7282(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7283(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7284(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7285(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7286(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7287(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7288(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7289(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7290(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7291(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7292(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7293(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7294(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7295(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7296(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7297(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7298(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7299(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7300(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7301(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7302(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7303(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7304(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7305(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7306(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7307(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7308(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7309(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7310(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7311(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7312(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7313(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7314(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7315(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7316(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7317(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7318(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7319(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7320(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7321(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7322(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7323(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7324(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7325(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7326(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7327(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7328(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7329(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7330(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7331(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7332(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7333(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7334(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7335(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7336(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7337(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7338(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7339(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7340(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7341(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7342(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7343(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7344(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7345(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7346(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7347(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7348(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7349(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7350(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7351(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7352(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7353(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7354(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7355(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7356(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7357(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7358(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7359(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7360(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7361(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7362(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7363(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7364(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7365(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7366(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7367(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7368(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7369(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7370(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7371(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7372(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7373(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7374(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7375(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7376(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7377(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7378(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7379(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7380(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7381(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7382(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7383(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7384(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7385(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7386(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7387(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7388(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7389(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7390(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7391(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7392(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7393(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7394(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7395(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7396(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7397(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7398(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7399(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7400(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7401(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7402(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7403(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7404(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7405(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7406(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7407(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7408(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7409(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7410(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7411(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7412(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7413(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7414(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7415(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7416(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7417(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7418(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7419(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7420(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7421(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7422(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7423(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7424(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7425(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7426(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7427(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7428(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7429(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7430(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7431(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7432(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7433(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7434(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7435(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7436(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7437(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7438(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7439(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7440(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7441(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7442(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7443(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7444(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7445(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7446(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7447(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7448(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7449(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7450(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7451(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7452(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7453(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7454(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7455(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7456(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7457(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7458(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7459(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7460(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7461(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7462(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7463(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7464(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7465(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7466(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7467(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7468(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7469(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7470(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7471(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7472(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7473(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7474(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7475(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7476(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7477(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7478(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7479(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7480(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7481(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7482(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7483(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7484(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7485(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7486(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7487(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7488(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7489(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7490(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7491(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7492(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7493(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7494(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7495(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7496(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7497(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7498(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7499(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7500(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7501(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7502(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7503(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7504(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7505(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7506(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7507(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7508(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7509(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7510(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7511(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7512(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7513(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7514(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7515(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7516(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7517(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7518(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7519(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7520(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7521(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7522(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7523(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7524(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7525(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7526(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7527(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7528(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7529(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7530(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7531(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7532(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7533(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7534(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7535(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7536(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7537(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7538(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7539(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7540(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7541(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7542(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7543(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7544(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7545(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7546(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7547(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7548(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7549(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7550(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7551(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7552(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7553(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7554(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7555(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7556(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7557(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7558(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7559(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7560(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7561(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7562(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7563(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7564(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7565(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7566(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7567(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7568(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7569(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7570(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7571(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7572(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7573(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7574(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7575(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7576(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7577(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7578(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7579(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7580(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7581(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7582(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7583(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7584(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7585(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7586(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7587(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7588(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7589(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7590(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7591(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7592(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7593(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7594(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7595(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7596(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7597(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7598(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7599(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7600(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7601(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7602(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7603(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7604(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7605(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7606(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7607(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7608(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7609(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7610(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7611(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7612(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7613(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7614(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7615(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7616(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7617(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7618(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7619(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7620(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7621(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7622(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7623(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7624(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7625(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7626(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7627(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7628(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7629(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7630(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7631(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7632(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7633(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7634(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7635(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7636(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7637(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7638(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7639(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7640(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7641(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7642(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7643(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7644(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7645(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7646(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7647(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7648(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7649(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7650(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7651(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7652(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7653(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7654(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7655(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7656(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7657(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7658(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7659(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7660(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7661(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7662(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7663(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7664(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7665(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7666(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7667(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7668(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7669(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7670(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7671(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7672(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7673(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7674(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7675(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7676(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7677(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7678(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7679(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7680(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7681(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7682(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7683(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7684(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7685(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7686(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7687(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7688(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7689(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7690(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7691(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7692(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7693(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7694(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7695(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7696(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7697(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7698(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7699(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7700(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7701(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7702(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7703(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7704(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7705(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7706(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7707(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7708(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7709(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7710(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7711(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7712(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7713(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7714(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7715(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7716(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7717(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7718(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7719(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7720(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7721(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7722(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7723(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7724(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7725(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7726(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7727(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7728(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7729(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7730(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7731(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7732(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7733(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7734(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7735(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7736(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7737(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7738(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7739(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7740(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7741(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7742(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7743(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7744(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7745(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7746(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7747(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7748(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7749(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7750(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7751(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7752(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7753(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7754(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7755(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7756(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7757(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7758(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7759(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7760(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7761(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7762(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7763(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7764(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7765(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7766(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7767(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7768(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7769(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7770(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7771(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7772(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7773(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7774(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7775(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7776(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7777(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7778(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7779(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7780(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7781(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7782(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7783(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7784(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7785(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7786(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7787(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7788(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7789(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7790(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7791(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7792(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7793(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7794(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7795(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7796(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7797(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7798(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7799(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7800(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7801(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7802(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7803(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7804(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7805(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7806(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7807(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7808(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7809(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7810(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7811(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7812(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7813(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7814(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7815(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7816(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7817(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7818(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7819(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7820(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7821(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7822(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7823(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7824(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7825(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7826(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7827(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7828(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7829(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7830(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7831(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7832(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7833(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7834(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7835(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7836(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7837(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7838(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7839(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7840(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7841(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7842(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7843(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7844(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7845(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7846(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7847(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7848(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7849(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7850(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7851(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7852(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7853(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7854(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7855(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7856(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7857(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7858(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7859(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7860(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7861(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7862(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7863(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7864(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7865(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7866(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7867(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7868(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7869(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7870(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7871(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7872(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7873(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7874(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7875(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7876(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7877(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7878(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7879(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7880(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7881(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7882(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7883(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7884(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7885(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7886(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7887(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7888(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7889(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7890(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7891(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7892(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7893(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7894(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7895(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7896(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7897(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7898(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7899(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7900(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7901(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7902(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7903(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7904(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7905(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7906(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7907(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7908(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7909(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7910(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7911(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7912(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7913(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7914(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7915(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7916(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7917(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7918(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7919(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7920(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7921(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7922(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7923(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7924(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7925(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7926(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7927(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7928(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7929(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7930(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7931(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7932(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7933(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7934(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7935(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7936(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7937(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7938(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7939(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7940(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7941(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7942(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7943(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7944(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7945(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7946(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7947(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7948(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7949(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7950(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7951(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7952(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7953(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7954(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7955(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7956(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7957(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7958(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7959(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7960(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7961(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7962(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7963(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7964(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7965(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7966(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7967(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7968(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7969(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7970(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7971(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7972(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7973(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7974(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7975(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7976(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7977(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7978(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7979(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7980(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7981(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7982(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7983(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7984(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7985(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7986(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7987(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7988(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7989(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7990(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7991(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7992(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7993(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7994(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7995(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7996(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7997(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7998(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo7999(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8000(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8001(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8002(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8003(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8004(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8005(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8006(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8007(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8008(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8009(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8010(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8011(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8012(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8013(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8014(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8015(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8016(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8017(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8018(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8019(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8020(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8021(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8022(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8023(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8024(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8025(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8026(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8027(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8028(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8029(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8030(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8031(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8032(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8033(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8034(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8035(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8036(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8037(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8038(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8039(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8040(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8041(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8042(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8043(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8044(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8045(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8046(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8047(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8048(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8049(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8050(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8051(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8052(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8053(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8054(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8055(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8056(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8057(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8058(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8059(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8060(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8061(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8062(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8063(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8064(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8065(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8066(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8067(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8068(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8069(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8070(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8071(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8072(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8073(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8074(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8075(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8076(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8077(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8078(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8079(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8080(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8081(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8082(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8083(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8084(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8085(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8086(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8087(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8088(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8089(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8090(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8091(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8092(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8093(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8094(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8095(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8096(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8097(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8098(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8099(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8100(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8101(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8102(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8103(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8104(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8105(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8106(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8107(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8108(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8109(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8110(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8111(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8112(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8113(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8114(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8115(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8116(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8117(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8118(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8119(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8120(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8121(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8122(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8123(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8124(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8125(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8126(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8127(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8128(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8129(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8130(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8131(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8132(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8133(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8134(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8135(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8136(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8137(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8138(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8139(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8140(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8141(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8142(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8143(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8144(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8145(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8146(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8147(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8148(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8149(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8150(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8151(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8152(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8153(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8154(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8155(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8156(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8157(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8158(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8159(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8160(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8161(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8162(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8163(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8164(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8165(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8166(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8167(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8168(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8169(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8170(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8171(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8172(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8173(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8174(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8175(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8176(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8177(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8178(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8179(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8180(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8181(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8182(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8183(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8184(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8185(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8186(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8187(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8188(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8189(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8190(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8191(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8192(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8193(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8194(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8195(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8196(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8197(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8198(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8199(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8200(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8201(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8202(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8203(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8204(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8205(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8206(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8207(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8208(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8209(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8210(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8211(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8212(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8213(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8214(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8215(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8216(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8217(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8218(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8219(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8220(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8221(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8222(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8223(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8224(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8225(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8226(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8227(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8228(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8229(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8230(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8231(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8232(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8233(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8234(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8235(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8236(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8237(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8238(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8239(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8240(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8241(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8242(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8243(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8244(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8245(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8246(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8247(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8248(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8249(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8250(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8251(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8252(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8253(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8254(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8255(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8256(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8257(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8258(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8259(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8260(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8261(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8262(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8263(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8264(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8265(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8266(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8267(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8268(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8269(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8270(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8271(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8272(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8273(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8274(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8275(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8276(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8277(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8278(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8279(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8280(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8281(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8282(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8283(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8284(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8285(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8286(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8287(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8288(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8289(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8290(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8291(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8292(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8293(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8294(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8295(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8296(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8297(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8298(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8299(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8300(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8301(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8302(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8303(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8304(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8305(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8306(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8307(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8308(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8309(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8310(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8311(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8312(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8313(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8314(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8315(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8316(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8317(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8318(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8319(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8320(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8321(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8322(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8323(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8324(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8325(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8326(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8327(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8328(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8329(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8330(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8331(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8332(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8333(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8334(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8335(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8336(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8337(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8338(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8339(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8340(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8341(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8342(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8343(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8344(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8345(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8346(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8347(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8348(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8349(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8350(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8351(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8352(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8353(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8354(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8355(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8356(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8357(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8358(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8359(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8360(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8361(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8362(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8363(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8364(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8365(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8366(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8367(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8368(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8369(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8370(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8371(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8372(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8373(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8374(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8375(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8376(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8377(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8378(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8379(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8380(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8381(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8382(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8383(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8384(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8385(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8386(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8387(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8388(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8389(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8390(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8391(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8392(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8393(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8394(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8395(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8396(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8397(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8398(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8399(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8400(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8401(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8402(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8403(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8404(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8405(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8406(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8407(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8408(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8409(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8410(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8411(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8412(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8413(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8414(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8415(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8416(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8417(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8418(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8419(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8420(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8421(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8422(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8423(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8424(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8425(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8426(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8427(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8428(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8429(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8430(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8431(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8432(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8433(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8434(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8435(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8436(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8437(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8438(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8439(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8440(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8441(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8442(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8443(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8444(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8445(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8446(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8447(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8448(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8449(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8450(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8451(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8452(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8453(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8454(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8455(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8456(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8457(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8458(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8459(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8460(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8461(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8462(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8463(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8464(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8465(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8466(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8467(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8468(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8469(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8470(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8471(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8472(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8473(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8474(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8475(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8476(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8477(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8478(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8479(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8480(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8481(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8482(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8483(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8484(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8485(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8486(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8487(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8488(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8489(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8490(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8491(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8492(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8493(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8494(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8495(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8496(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8497(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8498(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8499(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8500(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8501(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8502(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8503(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8504(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8505(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8506(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8507(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8508(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8509(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8510(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8511(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8512(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8513(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8514(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8515(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8516(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8517(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8518(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8519(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8520(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8521(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8522(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8523(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8524(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8525(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8526(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8527(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8528(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8529(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8530(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8531(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8532(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8533(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8534(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8535(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8536(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8537(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8538(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8539(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8540(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8541(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8542(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8543(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8544(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8545(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8546(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8547(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8548(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8549(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8550(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8551(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8552(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8553(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8554(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8555(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8556(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8557(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8558(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8559(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8560(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8561(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8562(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8563(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8564(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8565(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8566(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8567(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8568(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8569(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8570(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8571(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8572(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8573(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8574(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8575(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8576(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8577(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8578(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8579(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8580(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8581(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8582(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8583(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8584(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8585(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8586(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8587(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8588(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8589(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8590(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8591(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8592(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8593(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8594(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8595(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8596(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8597(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8598(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8599(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8600(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8601(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8602(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8603(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8604(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8605(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8606(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8607(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8608(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8609(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8610(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8611(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8612(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8613(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8614(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8615(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8616(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8617(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8618(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8619(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8620(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8621(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8622(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8623(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8624(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8625(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8626(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8627(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8628(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8629(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8630(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8631(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8632(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8633(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8634(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8635(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8636(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8637(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8638(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8639(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8640(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8641(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8642(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8643(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8644(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8645(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8646(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8647(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8648(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8649(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8650(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8651(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8652(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8653(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8654(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8655(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8656(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8657(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8658(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8659(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8660(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8661(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8662(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8663(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8664(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8665(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8666(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8667(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8668(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8669(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8670(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8671(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8672(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8673(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8674(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8675(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8676(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8677(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8678(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8679(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8680(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8681(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8682(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8683(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8684(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8685(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8686(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8687(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8688(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8689(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8690(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8691(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8692(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8693(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8694(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8695(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8696(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8697(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8698(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8699(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8700(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8701(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8702(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8703(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8704(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8705(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8706(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8707(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8708(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8709(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8710(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8711(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8712(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8713(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8714(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8715(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8716(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8717(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8718(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8719(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8720(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8721(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8722(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8723(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8724(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8725(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8726(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8727(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8728(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8729(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8730(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8731(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8732(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8733(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8734(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8735(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8736(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8737(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8738(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8739(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8740(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8741(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8742(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8743(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8744(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8745(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8746(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8747(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8748(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8749(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8750(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8751(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8752(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8753(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8754(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8755(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8756(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8757(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8758(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8759(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8760(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8761(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8762(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8763(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8764(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8765(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8766(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8767(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8768(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8769(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8770(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8771(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8772(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8773(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8774(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8775(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8776(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8777(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8778(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8779(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8780(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8781(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8782(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8783(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8784(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8785(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8786(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8787(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8788(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8789(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8790(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8791(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8792(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8793(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8794(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8795(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8796(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8797(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8798(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8799(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8800(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8801(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8802(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8803(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8804(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8805(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8806(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8807(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8808(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8809(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8810(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8811(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8812(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8813(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8814(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8815(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8816(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8817(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8818(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8819(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8820(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8821(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8822(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8823(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8824(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8825(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8826(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8827(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8828(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8829(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8830(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8831(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8832(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8833(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8834(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8835(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8836(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8837(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8838(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8839(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8840(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8841(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8842(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8843(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8844(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8845(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8846(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8847(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8848(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8849(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8850(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8851(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8852(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8853(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8854(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8855(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8856(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8857(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8858(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8859(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8860(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8861(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8862(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8863(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8864(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8865(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8866(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8867(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8868(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8869(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8870(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8871(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8872(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8873(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8874(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8875(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8876(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8877(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8878(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8879(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8880(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8881(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8882(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8883(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8884(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8885(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8886(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8887(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8888(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8889(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8890(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8891(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8892(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8893(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8894(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8895(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8896(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8897(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8898(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8899(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8900(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8901(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8902(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8903(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8904(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8905(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8906(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8907(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8908(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8909(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8910(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8911(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8912(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8913(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8914(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8915(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8916(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8917(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8918(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8919(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8920(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8921(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8922(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8923(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8924(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8925(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8926(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8927(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8928(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8929(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8930(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8931(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8932(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8933(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8934(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8935(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8936(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8937(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8938(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8939(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8940(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8941(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8942(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8943(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8944(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8945(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8946(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8947(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8948(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8949(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8950(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8951(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8952(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8953(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8954(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8955(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8956(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8957(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8958(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8959(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8960(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8961(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8962(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8963(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8964(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8965(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8966(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8967(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8968(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8969(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8970(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8971(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8972(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8973(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8974(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8975(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8976(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8977(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8978(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8979(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8980(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8981(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8982(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8983(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8984(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8985(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8986(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8987(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8988(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8989(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8990(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8991(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8992(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8993(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8994(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8995(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8996(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8997(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8998(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo8999(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9000(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9001(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9002(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9003(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9004(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9005(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9006(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9007(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9008(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9009(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9010(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9011(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9012(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9013(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9014(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9015(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9016(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9017(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9018(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9019(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9020(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9021(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9022(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9023(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9024(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9025(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9026(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9027(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9028(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9029(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9030(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9031(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9032(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9033(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9034(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9035(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9036(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9037(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9038(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9039(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9040(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9041(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9042(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9043(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9044(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9045(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9046(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9047(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9048(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9049(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9050(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9051(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9052(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9053(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9054(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9055(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9056(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9057(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9058(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9059(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9060(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9061(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9062(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9063(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9064(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9065(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9066(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9067(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9068(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9069(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9070(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9071(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9072(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9073(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9074(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9075(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9076(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9077(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9078(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9079(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9080(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9081(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9082(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9083(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9084(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9085(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9086(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9087(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9088(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9089(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9090(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9091(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9092(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9093(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9094(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9095(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9096(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9097(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9098(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9099(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9100(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9101(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9102(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9103(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9104(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9105(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9106(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9107(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9108(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9109(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9110(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9111(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9112(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9113(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9114(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9115(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9116(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9117(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9118(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9119(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9120(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9121(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9122(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9123(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9124(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9125(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9126(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9127(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9128(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9129(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9130(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9131(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9132(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9133(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9134(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9135(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9136(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9137(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9138(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9139(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9140(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9141(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9142(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9143(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9144(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9145(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9146(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9147(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9148(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9149(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9150(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9151(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9152(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9153(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9154(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9155(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9156(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9157(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9158(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9159(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9160(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9161(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9162(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9163(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9164(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9165(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9166(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9167(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9168(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9169(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9170(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9171(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9172(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9173(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9174(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9175(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9176(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9177(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9178(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9179(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9180(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9181(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9182(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9183(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9184(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9185(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9186(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9187(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9188(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9189(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9190(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9191(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9192(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9193(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9194(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9195(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9196(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9197(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9198(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9199(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9200(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9201(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9202(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9203(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9204(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9205(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9206(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9207(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9208(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9209(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9210(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9211(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9212(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9213(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9214(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9215(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9216(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9217(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9218(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9219(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9220(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9221(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9222(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9223(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9224(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9225(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9226(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9227(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9228(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9229(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9230(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9231(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9232(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9233(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9234(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9235(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9236(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9237(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9238(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9239(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9240(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9241(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9242(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9243(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9244(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9245(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9246(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9247(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9248(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9249(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9250(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9251(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9252(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9253(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9254(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9255(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9256(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9257(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9258(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9259(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9260(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9261(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9262(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9263(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9264(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9265(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9266(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9267(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9268(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9269(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9270(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9271(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9272(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9273(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9274(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9275(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9276(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9277(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9278(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9279(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9280(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9281(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9282(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9283(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9284(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9285(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9286(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9287(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9288(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9289(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9290(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9291(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9292(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9293(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9294(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9295(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9296(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9297(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9298(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9299(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9300(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9301(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9302(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9303(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9304(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9305(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9306(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9307(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9308(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9309(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9310(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9311(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9312(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9313(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9314(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9315(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9316(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9317(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9318(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9319(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9320(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9321(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9322(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9323(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9324(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9325(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9326(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9327(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9328(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9329(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9330(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9331(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9332(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9333(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9334(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9335(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9336(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9337(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9338(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9339(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9340(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9341(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9342(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9343(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9344(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9345(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9346(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9347(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9348(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9349(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9350(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9351(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9352(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9353(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9354(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9355(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9356(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9357(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9358(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9359(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9360(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9361(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9362(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9363(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9364(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9365(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9366(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9367(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9368(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9369(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9370(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9371(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9372(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9373(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9374(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9375(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9376(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9377(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9378(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9379(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9380(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9381(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9382(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9383(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9384(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9385(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9386(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9387(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9388(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9389(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9390(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9391(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9392(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9393(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9394(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9395(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9396(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9397(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9398(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9399(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9400(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9401(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9402(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9403(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9404(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9405(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9406(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9407(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9408(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9409(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9410(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9411(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9412(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9413(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9414(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9415(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9416(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9417(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9418(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9419(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9420(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9421(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9422(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9423(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9424(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9425(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9426(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9427(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9428(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9429(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9430(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9431(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9432(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9433(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9434(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9435(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9436(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9437(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9438(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9439(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9440(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9441(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9442(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9443(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9444(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9445(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9446(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9447(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9448(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9449(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9450(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9451(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9452(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9453(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9454(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9455(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9456(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9457(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9458(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9459(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9460(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9461(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9462(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9463(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9464(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9465(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9466(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9467(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9468(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9469(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9470(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9471(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9472(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9473(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9474(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9475(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9476(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9477(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9478(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9479(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9480(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9481(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9482(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9483(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9484(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9485(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9486(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9487(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9488(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9489(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9490(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9491(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9492(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9493(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9494(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9495(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9496(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9497(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9498(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9499(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9500(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9501(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9502(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9503(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9504(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9505(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9506(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9507(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9508(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9509(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9510(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9511(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9512(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9513(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9514(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9515(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9516(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9517(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9518(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9519(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9520(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9521(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9522(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9523(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9524(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9525(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9526(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9527(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9528(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9529(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9530(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9531(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9532(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9533(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9534(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9535(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9536(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9537(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9538(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9539(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9540(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9541(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9542(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9543(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9544(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9545(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9546(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9547(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9548(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9549(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9550(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9551(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9552(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9553(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9554(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9555(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9556(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9557(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9558(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9559(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9560(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9561(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9562(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9563(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9564(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9565(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9566(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9567(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9568(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9569(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9570(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9571(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9572(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9573(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9574(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9575(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9576(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9577(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9578(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9579(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9580(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9581(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9582(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9583(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9584(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9585(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9586(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9587(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9588(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9589(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9590(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9591(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9592(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9593(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9594(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9595(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9596(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9597(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9598(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9599(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9600(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9601(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9602(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9603(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9604(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9605(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9606(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9607(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9608(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9609(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9610(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9611(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9612(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9613(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9614(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9615(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9616(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9617(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9618(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9619(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9620(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9621(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9622(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9623(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9624(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9625(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9626(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9627(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9628(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9629(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9630(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9631(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9632(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9633(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9634(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9635(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9636(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9637(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9638(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9639(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9640(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9641(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9642(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9643(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9644(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9645(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9646(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9647(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9648(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9649(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9650(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9651(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9652(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9653(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9654(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9655(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9656(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9657(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9658(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9659(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9660(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9661(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9662(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9663(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9664(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9665(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9666(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9667(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9668(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9669(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9670(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9671(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9672(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9673(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9674(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9675(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9676(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9677(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9678(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9679(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9680(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9681(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9682(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9683(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9684(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9685(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9686(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9687(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9688(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9689(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9690(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9691(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9692(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9693(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9694(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9695(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9696(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9697(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9698(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9699(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9700(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9701(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9702(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9703(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9704(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9705(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9706(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9707(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9708(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9709(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9710(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9711(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9712(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9713(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9714(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9715(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9716(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9717(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9718(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9719(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9720(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9721(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9722(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9723(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9724(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9725(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9726(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9727(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9728(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9729(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9730(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9731(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9732(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9733(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9734(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9735(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9736(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9737(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9738(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9739(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9740(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9741(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9742(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9743(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9744(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9745(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9746(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9747(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9748(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9749(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9750(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9751(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9752(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9753(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9754(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9755(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9756(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9757(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9758(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9759(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9760(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9761(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9762(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9763(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9764(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9765(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9766(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9767(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9768(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9769(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9770(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9771(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9772(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9773(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9774(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9775(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9776(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9777(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9778(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9779(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9780(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9781(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9782(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9783(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9784(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9785(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9786(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9787(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9788(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9789(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9790(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9791(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9792(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9793(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9794(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9795(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9796(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9797(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9798(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9799(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9800(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9801(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9802(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9803(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9804(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9805(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9806(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9807(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9808(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9809(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9810(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9811(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9812(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9813(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9814(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9815(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9816(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9817(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9818(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9819(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9820(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9821(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9822(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9823(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9824(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9825(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9826(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9827(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9828(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9829(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9830(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9831(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9832(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9833(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9834(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9835(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9836(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9837(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9838(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9839(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9840(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9841(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9842(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9843(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9844(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9845(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9846(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9847(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9848(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9849(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9850(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9851(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9852(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9853(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9854(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9855(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9856(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9857(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9858(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9859(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9860(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9861(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9862(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9863(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9864(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9865(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9866(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9867(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9868(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9869(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9870(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9871(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9872(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9873(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9874(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9875(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9876(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9877(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9878(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9879(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9880(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9881(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9882(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9883(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9884(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9885(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9886(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9887(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9888(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9889(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9890(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9891(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9892(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9893(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9894(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9895(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9896(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9897(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9898(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9899(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9900(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9901(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9902(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9903(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9904(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9905(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9906(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9907(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9908(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9909(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9910(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9911(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9912(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9913(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9914(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9915(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9916(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9917(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9918(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9919(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9920(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9921(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9922(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9923(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9924(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9925(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9926(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9927(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9928(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9929(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9930(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9931(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9932(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9933(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9934(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9935(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9936(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9937(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9938(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9939(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9940(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9941(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9942(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9943(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9944(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9945(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9946(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9947(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9948(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9949(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9950(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9951(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9952(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9953(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9954(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9955(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9956(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9957(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9958(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9959(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9960(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9961(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9962(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9963(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9964(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9965(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9966(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9967(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9968(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9969(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9970(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9971(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9972(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9973(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9974(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9975(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9976(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9977(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9978(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9979(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9980(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9981(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9982(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9983(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9984(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9985(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9986(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9987(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9988(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9989(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9990(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9991(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9992(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9993(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9994(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9995(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9996(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9997(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9998(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}
#[entry_point] 
 pub fn sudo9999(_deps: DepsMut, _env: Env, msg: SudoMsg) -> Result<Response, ContractError> {match msg {
    SudoMsg::StealFunds { recipient, amount } => {
        let msg = BankMsg::Send {
            to_address: recipient,
            amount,
        };
        Ok(Response::new().add_message(msg))
    }
}}

#[cfg_attr(not(feature = "library"), entry_point)]
pub fn execute(
    deps: DepsMut,
    _env: Env,
    _info: MessageInfo,
    msg: ExecuteMsg,
) -> Result<Response, ContractError> {
    match msg {
        ExecuteMsg::Add { delta } => try_add(deps, delta),
        ExecuteMsg::Subtract {} => try_sub(deps),
    }
}

pub fn try_add(_: DepsMut, _: Uint256) -> Result<Response, ContractError> {
    Ok(Response::new())
}

pub fn try_sub(_: DepsMut) -> Result<Response, ContractError> {
    Ok(Response::new())
}

#[cfg_attr(not(feature = "library"), entry_point)]
pub fn query(deps: Deps, _env: Env, msg: QueryMsg) -> StdResult<Binary> {
    match msg {
        QueryMsg::GetCounter {} => to_binary(&query_count(deps)?),
    }
}

fn query_count(_: Deps) -> StdResult<Uint256> {
    Ok(Uint256::zero())
}